// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: web_ups.proto

#ifndef PROTOBUF_INCLUDED_web_5fups_2eproto
#define PROTOBUF_INCLUDED_web_5fups_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_web_5fups_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_web_5fups_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_web_5fups_2eproto();
namespace WEB {
class QueryTruck;
class QueryTruckDefaultTypeInternal;
extern QueryTruckDefaultTypeInternal _QueryTruck_default_instance_;
class TruckStatus;
class TruckStatusDefaultTypeInternal;
extern TruckStatusDefaultTypeInternal _TruckStatus_default_instance_;
}  // namespace WEB
namespace google {
namespace protobuf {
template<> ::WEB::QueryTruck* Arena::CreateMaybeMessage<::WEB::QueryTruck>(Arena*);
template<> ::WEB::TruckStatus* Arena::CreateMaybeMessage<::WEB::TruckStatus>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace WEB {

// ===================================================================

class QueryTruck :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WEB.QueryTruck) */ {
 public:
  QueryTruck();
  virtual ~QueryTruck();

  QueryTruck(const QueryTruck& from);

  inline QueryTruck& operator=(const QueryTruck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryTruck(QueryTruck&& from) noexcept
    : QueryTruck() {
    *this = ::std::move(from);
  }

  inline QueryTruck& operator=(QueryTruck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QueryTruck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryTruck* internal_default_instance() {
    return reinterpret_cast<const QueryTruck*>(
               &_QueryTruck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(QueryTruck* other);
  friend void swap(QueryTruck& a, QueryTruck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryTruck* New() const final {
    return CreateMaybeMessage<QueryTruck>(nullptr);
  }

  QueryTruck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QueryTruck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QueryTruck& from);
  void MergeFrom(const QueryTruck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryTruck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 seqnum = 2;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 2;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WEB.QueryTruck)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 seqnum_;
  ::google::protobuf::int32 truckid_;
  friend struct ::TableStruct_web_5fups_2eproto;
};
// -------------------------------------------------------------------

class TruckStatus :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WEB.TruckStatus) */ {
 public:
  TruckStatus();
  virtual ~TruckStatus();

  TruckStatus(const TruckStatus& from);

  inline TruckStatus& operator=(const TruckStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TruckStatus(TruckStatus&& from) noexcept
    : TruckStatus() {
    *this = ::std::move(from);
  }

  inline TruckStatus& operator=(TruckStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TruckStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TruckStatus* internal_default_instance() {
    return reinterpret_cast<const TruckStatus*>(
               &_TruckStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TruckStatus* other);
  friend void swap(TruckStatus& a, TruckStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TruckStatus* New() const final {
    return CreateMaybeMessage<TruckStatus>(nullptr);
  }

  TruckStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TruckStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TruckStatus& from);
  void MergeFrom(const TruckStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TruckStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // required int32 x = 3;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int64 ack = 5;
  bool has_ack() const;
  void clear_ack();
  static const int kAckFieldNumber = 5;
  ::google::protobuf::int64 ack() const;
  void set_ack(::google::protobuf::int64 value);

  // required int32 y = 4;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 4;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WEB.TruckStatus)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::int32 truckid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int64 ack_;
  ::google::protobuf::int32 y_;
  friend struct ::TableStruct_web_5fups_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QueryTruck

// required int32 truckid = 1;
inline bool QueryTruck::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryTruck::clear_truckid() {
  truckid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 QueryTruck::truckid() const {
  // @@protoc_insertion_point(field_get:WEB.QueryTruck.truckid)
  return truckid_;
}
inline void QueryTruck::set_truckid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  truckid_ = value;
  // @@protoc_insertion_point(field_set:WEB.QueryTruck.truckid)
}

// required int64 seqnum = 2;
inline bool QueryTruck::has_seqnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryTruck::clear_seqnum() {
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 QueryTruck::seqnum() const {
  // @@protoc_insertion_point(field_get:WEB.QueryTruck.seqnum)
  return seqnum_;
}
inline void QueryTruck::set_seqnum(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:WEB.QueryTruck.seqnum)
}

// -------------------------------------------------------------------

// TruckStatus

// required int32 truckid = 1;
inline bool TruckStatus::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TruckStatus::clear_truckid() {
  truckid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 TruckStatus::truckid() const {
  // @@protoc_insertion_point(field_get:WEB.TruckStatus.truckid)
  return truckid_;
}
inline void TruckStatus::set_truckid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  truckid_ = value;
  // @@protoc_insertion_point(field_set:WEB.TruckStatus.truckid)
}

// required string status = 2;
inline bool TruckStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TruckStatus::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& TruckStatus::status() const {
  // @@protoc_insertion_point(field_get:WEB.TruckStatus.status)
  return status_.GetNoArena();
}
inline void TruckStatus::set_status(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WEB.TruckStatus.status)
}
#if LANG_CXX11
inline void TruckStatus::set_status(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WEB.TruckStatus.status)
}
#endif
inline void TruckStatus::set_status(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WEB.TruckStatus.status)
}
inline void TruckStatus::set_status(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WEB.TruckStatus.status)
}
inline ::std::string* TruckStatus::mutable_status() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:WEB.TruckStatus.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TruckStatus::release_status() {
  // @@protoc_insertion_point(field_release:WEB.TruckStatus.status)
  if (!has_status()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return status_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TruckStatus::set_allocated_status(::std::string* status) {
  if (status != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:WEB.TruckStatus.status)
}

// required int32 x = 3;
inline bool TruckStatus::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TruckStatus::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 TruckStatus::x() const {
  // @@protoc_insertion_point(field_get:WEB.TruckStatus.x)
  return x_;
}
inline void TruckStatus::set_x(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  x_ = value;
  // @@protoc_insertion_point(field_set:WEB.TruckStatus.x)
}

// required int32 y = 4;
inline bool TruckStatus::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TruckStatus::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 TruckStatus::y() const {
  // @@protoc_insertion_point(field_get:WEB.TruckStatus.y)
  return y_;
}
inline void TruckStatus::set_y(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  y_ = value;
  // @@protoc_insertion_point(field_set:WEB.TruckStatus.y)
}

// required int64 ack = 5;
inline bool TruckStatus::has_ack() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TruckStatus::clear_ack() {
  ack_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 TruckStatus::ack() const {
  // @@protoc_insertion_point(field_get:WEB.TruckStatus.ack)
  return ack_;
}
inline void TruckStatus::set_ack(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  ack_ = value;
  // @@protoc_insertion_point(field_set:WEB.TruckStatus.ack)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace WEB

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_web_5fups_2eproto
