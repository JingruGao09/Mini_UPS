// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ups_amazon.proto

#include "ups_amazon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ups_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InitWorld_ups_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ups_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PackageInfo_ups_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ups_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TruckDst_ups_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ups_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TruckLocation_ups_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ups_5famazon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WarehouseInfo_ups_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ups_5famazon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DetermineDst_ups_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ups_5famazon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DetermineTruck_ups_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ups_5famazon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DetermineWarehouse_ups_5famazon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ups_5famazon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SettleShipment_ups_5famazon_2eproto;
namespace UPS_AMAZON{
class InitWorldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InitWorld> _instance;
} _InitWorld_default_instance_;
class WarehouseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WarehouseInfo> _instance;
} _WarehouseInfo_default_instance_;
class DetermineWarehouseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetermineWarehouse> _instance;
} _DetermineWarehouse_default_instance_;
class DetermineTruckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetermineTruck> _instance;
} _DetermineTruck_default_instance_;
class TruckLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TruckLocation> _instance;
} _TruckLocation_default_instance_;
class DetermineDstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetermineDst> _instance;
} _DetermineDst_default_instance_;
class TruckDstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TruckDst> _instance;
} _TruckDst_default_instance_;
class SettleShipmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SettleShipment> _instance;
} _SettleShipment_default_instance_;
class PackageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PackageInfo> _instance;
} _PackageInfo_default_instance_;
class UCommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UCommands> _instance;
} _UCommands_default_instance_;
class ACommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ACommands> _instance;
} _ACommands_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response> _instance;
} _Response_default_instance_;
}  // namespace UPS_AMAZON
static void InitDefaultsInitWorld_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InitWorld_default_instance_;
    new (ptr) ::InitWorld();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InitWorld::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InitWorld_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInitWorld_ups_5famazon_2eproto}, {}};

static void InitDefaultsWarehouseInfo_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WarehouseInfo_default_instance_;
    new (ptr) ::WarehouseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WarehouseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WarehouseInfo_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWarehouseInfo_ups_5famazon_2eproto}, {}};

static void InitDefaultsDetermineWarehouse_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DetermineWarehouse_default_instance_;
    new (ptr) ::DetermineWarehouse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DetermineWarehouse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DetermineWarehouse_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDetermineWarehouse_ups_5famazon_2eproto}, {
      &scc_info_WarehouseInfo_ups_5famazon_2eproto.base,}};

static void InitDefaultsDetermineTruck_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DetermineTruck_default_instance_;
    new (ptr) ::DetermineTruck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DetermineTruck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DetermineTruck_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDetermineTruck_ups_5famazon_2eproto}, {
      &scc_info_TruckLocation_ups_5famazon_2eproto.base,}};

static void InitDefaultsTruckLocation_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TruckLocation_default_instance_;
    new (ptr) ::TruckLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TruckLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TruckLocation_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTruckLocation_ups_5famazon_2eproto}, {}};

static void InitDefaultsDetermineDst_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DetermineDst_default_instance_;
    new (ptr) ::DetermineDst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DetermineDst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DetermineDst_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDetermineDst_ups_5famazon_2eproto}, {
      &scc_info_TruckDst_ups_5famazon_2eproto.base,}};

static void InitDefaultsTruckDst_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TruckDst_default_instance_;
    new (ptr) ::TruckDst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TruckDst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TruckDst_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTruckDst_ups_5famazon_2eproto}, {}};

static void InitDefaultsSettleShipment_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SettleShipment_default_instance_;
    new (ptr) ::SettleShipment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SettleShipment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SettleShipment_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSettleShipment_ups_5famazon_2eproto}, {
      &scc_info_PackageInfo_ups_5famazon_2eproto.base,}};

static void InitDefaultsPackageInfo_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PackageInfo_default_instance_;
    new (ptr) ::PackageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PackageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PackageInfo_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPackageInfo_ups_5famazon_2eproto}, {}};

static void InitDefaultsUCommands_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UCommands_default_instance_;
    new (ptr) ::UCommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UCommands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UCommands_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUCommands_ups_5famazon_2eproto}, {
      &scc_info_InitWorld_ups_5famazon_2eproto.base,
      &scc_info_DetermineTruck_ups_5famazon_2eproto.base,
      &scc_info_SettleShipment_ups_5famazon_2eproto.base,}};

static void InitDefaultsACommands_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ACommands_default_instance_;
    new (ptr) ::ACommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ACommands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ACommands_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsACommands_ups_5famazon_2eproto}, {
      &scc_info_DetermineWarehouse_ups_5famazon_2eproto.base,
      &scc_info_DetermineDst_ups_5famazon_2eproto.base,}};

static void InitDefaultsResponse_ups_5famazon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Response_default_instance_;
    new (ptr) ::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_ups_5famazon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_ups_5famazon_2eproto}, {}};

void InitDefaults_ups_5famazon_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_InitWorld_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WarehouseInfo_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DetermineWarehouse_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DetermineTruck_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TruckLocation_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DetermineDst_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TruckDst_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SettleShipment_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PackageInfo_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UCommands_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ACommands_ups_5famazon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_ups_5famazon_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ups_5famazon_2eproto[12];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ups_5famazon_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ups_5famazon_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ups_5famazon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::InitWorld, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::InitWorld, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InitWorld, worldid_),
  PROTOBUF_FIELD_OFFSET(::InitWorld, seqnum_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::WarehouseInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::WarehouseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WarehouseInfo, whid_),
  PROTOBUF_FIELD_OFFSET(::WarehouseInfo, wh_x_),
  PROTOBUF_FIELD_OFFSET(::WarehouseInfo, wh_y_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::DetermineWarehouse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::DetermineWarehouse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DetermineWarehouse, warehouses_),
  PROTOBUF_FIELD_OFFSET(::DetermineWarehouse, seqnum_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::DetermineTruck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::DetermineTruck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DetermineTruck, arrivedtrucks_),
  PROTOBUF_FIELD_OFFSET(::DetermineTruck, seqnum_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::TruckLocation, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TruckLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TruckLocation, truckid_),
  PROTOBUF_FIELD_OFFSET(::TruckLocation, whid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::DetermineDst, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::DetermineDst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DetermineDst, leavingtrucks_),
  PROTOBUF_FIELD_OFFSET(::DetermineDst, seqnum_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::TruckDst, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TruckDst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TruckDst, truckid_),
  PROTOBUF_FIELD_OFFSET(::TruckDst, x_),
  PROTOBUF_FIELD_OFFSET(::TruckDst, y_),
  PROTOBUF_FIELD_OFFSET(::TruckDst, shipid_),
  0,
  1,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::SettleShipment, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SettleShipment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SettleShipment, packages_),
  PROTOBUF_FIELD_OFFSET(::SettleShipment, seqnum_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::PackageInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PackageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PackageInfo, packageid_),
  PROTOBUF_FIELD_OFFSET(::PackageInfo, shipid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::UCommands, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::UCommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UCommands, worlds_),
  PROTOBUF_FIELD_OFFSET(::UCommands, trucks_),
  PROTOBUF_FIELD_OFFSET(::UCommands, shipments_),
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ACommands, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ACommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ACommands, warehouses_),
  PROTOBUF_FIELD_OFFSET(::ACommands, dests_),
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Response, succeed_),
  PROTOBUF_FIELD_OFFSET(::Response, seqnum_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::InitWorld)},
  { 9, 17, sizeof(::WarehouseInfo)},
  { 20, 27, sizeof(::DetermineWarehouse)},
  { 29, 36, sizeof(::DetermineTruck)},
  { 38, 45, sizeof(::TruckLocation)},
  { 47, 54, sizeof(::DetermineDst)},
  { 56, 65, sizeof(::TruckDst)},
  { 69, 76, sizeof(::SettleShipment)},
  { 78, 85, sizeof(::PackageInfo)},
  { 87, 95, sizeof(::UCommands)},
  { 98, 105, sizeof(::ACommands)},
  { 107, 114, sizeof(::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_InitWorld_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WarehouseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DetermineWarehouse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DetermineTruck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TruckLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DetermineDst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TruckDst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SettleShipment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PackageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UCommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ACommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Response_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ups_5famazon_2eproto = {
  {}, AddDescriptors_ups_5famazon_2eproto, "ups_amazon.proto", schemas,
  file_default_instances, TableStruct_ups_5famazon_2eproto::offsets,
  file_level_metadata_ups_5famazon_2eproto, 12, file_level_enum_descriptors_ups_5famazon_2eproto, file_level_service_descriptors_ups_5famazon_2eproto,
};

const char descriptor_table_protodef_ups_5famazon_2eproto[] =
  "\n\020ups_amazon.proto\",\n\tInitWorld\022\017\n\007world"
  "id\030\001 \002(\003\022\016\n\006seqnum\030\002 \002(\003\"9\n\rWarehouseInf"
  "o\022\014\n\004whid\030\001 \002(\005\022\014\n\004wh_x\030\002 \002(\005\022\014\n\004wh_y\030\003 "
  "\002(\005\"H\n\022DetermineWarehouse\022\"\n\nwarehouses\030"
  "\001 \003(\0132\016.WarehouseInfo\022\016\n\006seqnum\030\002 \002(\003\"G\n"
  "\016DetermineTruck\022%\n\rarrivedtrucks\030\001 \003(\0132\016"
  ".TruckLocation\022\016\n\006seqnum\030\002 \002(\003\".\n\rTruckL"
  "ocation\022\017\n\007truckid\030\001 \002(\005\022\014\n\004whid\030\002 \002(\005\"@"
  "\n\014DetermineDst\022 \n\rleavingtrucks\030\001 \003(\0132\t."
  "TruckDst\022\016\n\006seqnum\030\002 \002(\003\"A\n\010TruckDst\022\017\n\007"
  "truckid\030\001 \002(\005\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003 \002(\005\022\016\n\006s"
  "hipid\030\004 \002(\003\"@\n\016SettleShipment\022\036\n\010package"
  "s\030\001 \003(\0132\014.PackageInfo\022\016\n\006seqnum\030\002 \002(\003\"0\n"
  "\013PackageInfo\022\021\n\tpackageid\030\001 \002(\003\022\016\n\006shipi"
  "d\030\002 \002(\003\"l\n\tUCommands\022\032\n\006worlds\030\001 \003(\0132\n.I"
  "nitWorld\022\037\n\006trucks\030\002 \003(\0132\017.DetermineTruc"
  "k\022\"\n\tshipments\030\003 \003(\0132\017.SettleShipment\"R\n"
  "\tACommands\022\'\n\nwarehouses\030\001 \003(\0132\023.Determi"
  "neWarehouse\022\034\n\005dests\030\002 \003(\0132\r.DetermineDs"
  "t\"+\n\010Response\022\017\n\007succeed\030\001 \002(\010\022\016\n\006seqnum"
  "\030\002 \002(\003"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ups_5famazon_2eproto = {
  false, InitDefaults_ups_5famazon_2eproto, 
  descriptor_table_protodef_ups_5famazon_2eproto,
  "ups_amazon.proto", &assign_descriptors_table_ups_5famazon_2eproto, 806,
};

void AddDescriptors_ups_5famazon_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ups_5famazon_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ups_5famazon_2eproto = []() { AddDescriptors_ups_5famazon_2eproto(); return true; }();
namespace UPS_AMAZON{

// ===================================================================

void InitWorld::InitAsDefaultInstance() {
}
class InitWorld::HasBitSetters {
 public:
  static void set_has_worldid(InitWorld* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_seqnum(InitWorld* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitWorld::kWorldidFieldNumber;
const int InitWorld::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitWorld::InitWorld()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InitWorld)
}
InitWorld::InitWorld(const InitWorld& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&worldid_, &from.worldid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&worldid_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:InitWorld)
}

void InitWorld::SharedCtor() {
  ::memset(&worldid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&worldid_)) + sizeof(seqnum_));
}

InitWorld::~InitWorld() {
  // @@protoc_insertion_point(destructor:InitWorld)
  SharedDtor();
}

void InitWorld::SharedDtor() {
}

void InitWorld::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InitWorld& InitWorld::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InitWorld_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void InitWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:InitWorld)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&worldid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&worldid_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InitWorld::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InitWorld*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_worldid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InitWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InitWorld)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_worldid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InitWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InitWorld)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InitWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InitWorld)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InitWorld)
}

::google::protobuf::uint8* InitWorld::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InitWorld)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InitWorld)
  return target;
}

size_t InitWorld::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:InitWorld)
  size_t total_size = 0;

  if (has_worldid()) {
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t InitWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InitWorld)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InitWorld)
  GOOGLE_DCHECK_NE(&from, this);
  const InitWorld* source =
      ::google::protobuf::DynamicCastToGenerated<InitWorld>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InitWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InitWorld)
    MergeFrom(*source);
  }
}

void InitWorld::MergeFrom(const InitWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InitWorld)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      worldid_ = from.worldid_;
    }
    if (cached_has_bits & 0x00000002u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InitWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InitWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitWorld::CopyFrom(const InitWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InitWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitWorld::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void InitWorld::Swap(InitWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitWorld::InternalSwap(InitWorld* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(worldid_, other->worldid_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata InitWorld::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WarehouseInfo::InitAsDefaultInstance() {
}
class WarehouseInfo::HasBitSetters {
 public:
  static void set_has_whid(WarehouseInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_wh_x(WarehouseInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_wh_y(WarehouseInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WarehouseInfo::kWhidFieldNumber;
const int WarehouseInfo::kWhXFieldNumber;
const int WarehouseInfo::kWhYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WarehouseInfo::WarehouseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WarehouseInfo)
}
WarehouseInfo::WarehouseInfo(const WarehouseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&whid_, &from.whid_,
    static_cast<size_t>(reinterpret_cast<char*>(&wh_y_) -
    reinterpret_cast<char*>(&whid_)) + sizeof(wh_y_));
  // @@protoc_insertion_point(copy_constructor:WarehouseInfo)
}

void WarehouseInfo::SharedCtor() {
  ::memset(&whid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wh_y_) -
      reinterpret_cast<char*>(&whid_)) + sizeof(wh_y_));
}

WarehouseInfo::~WarehouseInfo() {
  // @@protoc_insertion_point(destructor:WarehouseInfo)
  SharedDtor();
}

void WarehouseInfo::SharedDtor() {
}

void WarehouseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WarehouseInfo& WarehouseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WarehouseInfo_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void WarehouseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:WarehouseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&whid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&wh_y_) -
        reinterpret_cast<char*>(&whid_)) + sizeof(wh_y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WarehouseInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WarehouseInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 whid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_whid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 wh_x = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_wh_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 wh_y = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_wh_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WarehouseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WarehouseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_whid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 wh_x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_wh_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wh_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 wh_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_wh_y(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wh_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WarehouseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WarehouseInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WarehouseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WarehouseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whid(), output);
  }

  // required int32 wh_x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wh_x(), output);
  }

  // required int32 wh_y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->wh_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WarehouseInfo)
}

::google::protobuf::uint8* WarehouseInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WarehouseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whid(), target);
  }

  // required int32 wh_x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wh_x(), target);
  }

  // required int32 wh_y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->wh_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WarehouseInfo)
  return target;
}

size_t WarehouseInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WarehouseInfo)
  size_t total_size = 0;

  if (has_whid()) {
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  if (has_wh_x()) {
    // required int32 wh_x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wh_x());
  }

  if (has_wh_y()) {
    // required int32 wh_y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wh_y());
  }

  return total_size;
}
size_t WarehouseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WarehouseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

    // required int32 wh_x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wh_x());

    // required int32 wh_y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wh_y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WarehouseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WarehouseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WarehouseInfo* source =
      ::google::protobuf::DynamicCastToGenerated<WarehouseInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WarehouseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WarehouseInfo)
    MergeFrom(*source);
  }
}

void WarehouseInfo::MergeFrom(const WarehouseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WarehouseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      whid_ = from.whid_;
    }
    if (cached_has_bits & 0x00000002u) {
      wh_x_ = from.wh_x_;
    }
    if (cached_has_bits & 0x00000004u) {
      wh_y_ = from.wh_y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WarehouseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WarehouseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarehouseInfo::CopyFrom(const WarehouseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WarehouseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WarehouseInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void WarehouseInfo::Swap(WarehouseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WarehouseInfo::InternalSwap(WarehouseInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(whid_, other->whid_);
  swap(wh_x_, other->wh_x_);
  swap(wh_y_, other->wh_y_);
}

::google::protobuf::Metadata WarehouseInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DetermineWarehouse::InitAsDefaultInstance() {
}
class DetermineWarehouse::HasBitSetters {
 public:
  static void set_has_seqnum(DetermineWarehouse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetermineWarehouse::kWarehousesFieldNumber;
const int DetermineWarehouse::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetermineWarehouse::DetermineWarehouse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DetermineWarehouse)
}
DetermineWarehouse::DetermineWarehouse(const DetermineWarehouse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      warehouses_(from.warehouses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seqnum_ = from.seqnum_;
  // @@protoc_insertion_point(copy_constructor:DetermineWarehouse)
}

void DetermineWarehouse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DetermineWarehouse_ups_5famazon_2eproto.base);
  seqnum_ = PROTOBUF_LONGLONG(0);
}

DetermineWarehouse::~DetermineWarehouse() {
  // @@protoc_insertion_point(destructor:DetermineWarehouse)
  SharedDtor();
}

void DetermineWarehouse::SharedDtor() {
}

void DetermineWarehouse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DetermineWarehouse& DetermineWarehouse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DetermineWarehouse_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void DetermineWarehouse::Clear() {
// @@protoc_insertion_point(message_clear_start:DetermineWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  warehouses_.Clear();
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DetermineWarehouse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DetermineWarehouse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .WarehouseInfo warehouses = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::WarehouseInfo::_InternalParse;
          object = msg->add_warehouses();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DetermineWarehouse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DetermineWarehouse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .WarehouseInfo warehouses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_warehouses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DetermineWarehouse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DetermineWarehouse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DetermineWarehouse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DetermineWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .WarehouseInfo warehouses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->warehouses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->warehouses(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DetermineWarehouse)
}

::google::protobuf::uint8* DetermineWarehouse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DetermineWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .WarehouseInfo warehouses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->warehouses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->warehouses(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DetermineWarehouse)
  return target;
}

size_t DetermineWarehouse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DetermineWarehouse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 seqnum = 2;
  if (has_seqnum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .WarehouseInfo warehouses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->warehouses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->warehouses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetermineWarehouse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DetermineWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  const DetermineWarehouse* source =
      ::google::protobuf::DynamicCastToGenerated<DetermineWarehouse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DetermineWarehouse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DetermineWarehouse)
    MergeFrom(*source);
  }
}

void DetermineWarehouse::MergeFrom(const DetermineWarehouse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DetermineWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  warehouses_.MergeFrom(from.warehouses_);
  if (from.has_seqnum()) {
    set_seqnum(from.seqnum());
  }
}

void DetermineWarehouse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DetermineWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetermineWarehouse::CopyFrom(const DetermineWarehouse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DetermineWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetermineWarehouse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->warehouses())) return false;
  return true;
}

void DetermineWarehouse::Swap(DetermineWarehouse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetermineWarehouse::InternalSwap(DetermineWarehouse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&warehouses_)->InternalSwap(CastToBase(&other->warehouses_));
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata DetermineWarehouse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DetermineTruck::InitAsDefaultInstance() {
}
class DetermineTruck::HasBitSetters {
 public:
  static void set_has_seqnum(DetermineTruck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetermineTruck::kArrivedtrucksFieldNumber;
const int DetermineTruck::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetermineTruck::DetermineTruck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DetermineTruck)
}
DetermineTruck::DetermineTruck(const DetermineTruck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      arrivedtrucks_(from.arrivedtrucks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seqnum_ = from.seqnum_;
  // @@protoc_insertion_point(copy_constructor:DetermineTruck)
}

void DetermineTruck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DetermineTruck_ups_5famazon_2eproto.base);
  seqnum_ = PROTOBUF_LONGLONG(0);
}

DetermineTruck::~DetermineTruck() {
  // @@protoc_insertion_point(destructor:DetermineTruck)
  SharedDtor();
}

void DetermineTruck::SharedDtor() {
}

void DetermineTruck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DetermineTruck& DetermineTruck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DetermineTruck_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void DetermineTruck::Clear() {
// @@protoc_insertion_point(message_clear_start:DetermineTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrivedtrucks_.Clear();
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DetermineTruck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DetermineTruck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .TruckLocation arrivedtrucks = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::TruckLocation::_InternalParse;
          object = msg->add_arrivedtrucks();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DetermineTruck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DetermineTruck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TruckLocation arrivedtrucks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrivedtrucks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DetermineTruck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DetermineTruck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DetermineTruck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DetermineTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TruckLocation arrivedtrucks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrivedtrucks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->arrivedtrucks(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DetermineTruck)
}

::google::protobuf::uint8* DetermineTruck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DetermineTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TruckLocation arrivedtrucks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrivedtrucks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->arrivedtrucks(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DetermineTruck)
  return target;
}

size_t DetermineTruck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DetermineTruck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 seqnum = 2;
  if (has_seqnum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TruckLocation arrivedtrucks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->arrivedtrucks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrivedtrucks(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetermineTruck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DetermineTruck)
  GOOGLE_DCHECK_NE(&from, this);
  const DetermineTruck* source =
      ::google::protobuf::DynamicCastToGenerated<DetermineTruck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DetermineTruck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DetermineTruck)
    MergeFrom(*source);
  }
}

void DetermineTruck::MergeFrom(const DetermineTruck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DetermineTruck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrivedtrucks_.MergeFrom(from.arrivedtrucks_);
  if (from.has_seqnum()) {
    set_seqnum(from.seqnum());
  }
}

void DetermineTruck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DetermineTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetermineTruck::CopyFrom(const DetermineTruck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DetermineTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetermineTruck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->arrivedtrucks())) return false;
  return true;
}

void DetermineTruck::Swap(DetermineTruck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetermineTruck::InternalSwap(DetermineTruck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&arrivedtrucks_)->InternalSwap(CastToBase(&other->arrivedtrucks_));
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata DetermineTruck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TruckLocation::InitAsDefaultInstance() {
}
class TruckLocation::HasBitSetters {
 public:
  static void set_has_truckid(TruckLocation* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_whid(TruckLocation* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TruckLocation::kTruckidFieldNumber;
const int TruckLocation::kWhidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TruckLocation::TruckLocation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TruckLocation)
}
TruckLocation::TruckLocation(const TruckLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&truckid_, &from.truckid_,
    static_cast<size_t>(reinterpret_cast<char*>(&whid_) -
    reinterpret_cast<char*>(&truckid_)) + sizeof(whid_));
  // @@protoc_insertion_point(copy_constructor:TruckLocation)
}

void TruckLocation::SharedCtor() {
  ::memset(&truckid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whid_) -
      reinterpret_cast<char*>(&truckid_)) + sizeof(whid_));
}

TruckLocation::~TruckLocation() {
  // @@protoc_insertion_point(destructor:TruckLocation)
  SharedDtor();
}

void TruckLocation::SharedDtor() {
}

void TruckLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TruckLocation& TruckLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TruckLocation_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void TruckLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:TruckLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&truckid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&whid_) -
        reinterpret_cast<char*>(&truckid_)) + sizeof(whid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TruckLocation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TruckLocation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_truckid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 whid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_whid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TruckLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TruckLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_truckid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 whid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_whid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TruckLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TruckLocation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TruckLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TruckLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int32 whid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->whid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TruckLocation)
}

::google::protobuf::uint8* TruckLocation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TruckLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int32 whid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->whid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TruckLocation)
  return target;
}

size_t TruckLocation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:TruckLocation)
  size_t total_size = 0;

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_whid()) {
    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  return total_size;
}
size_t TruckLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TruckLocation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TruckLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TruckLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const TruckLocation* source =
      ::google::protobuf::DynamicCastToGenerated<TruckLocation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TruckLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TruckLocation)
    MergeFrom(*source);
  }
}

void TruckLocation::MergeFrom(const TruckLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TruckLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      truckid_ = from.truckid_;
    }
    if (cached_has_bits & 0x00000002u) {
      whid_ = from.whid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TruckLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TruckLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TruckLocation::CopyFrom(const TruckLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TruckLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TruckLocation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TruckLocation::Swap(TruckLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TruckLocation::InternalSwap(TruckLocation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(truckid_, other->truckid_);
  swap(whid_, other->whid_);
}

::google::protobuf::Metadata TruckLocation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DetermineDst::InitAsDefaultInstance() {
}
class DetermineDst::HasBitSetters {
 public:
  static void set_has_seqnum(DetermineDst* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetermineDst::kLeavingtrucksFieldNumber;
const int DetermineDst::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetermineDst::DetermineDst()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DetermineDst)
}
DetermineDst::DetermineDst(const DetermineDst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      leavingtrucks_(from.leavingtrucks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seqnum_ = from.seqnum_;
  // @@protoc_insertion_point(copy_constructor:DetermineDst)
}

void DetermineDst::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DetermineDst_ups_5famazon_2eproto.base);
  seqnum_ = PROTOBUF_LONGLONG(0);
}

DetermineDst::~DetermineDst() {
  // @@protoc_insertion_point(destructor:DetermineDst)
  SharedDtor();
}

void DetermineDst::SharedDtor() {
}

void DetermineDst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DetermineDst& DetermineDst::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DetermineDst_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void DetermineDst::Clear() {
// @@protoc_insertion_point(message_clear_start:DetermineDst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leavingtrucks_.Clear();
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DetermineDst::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DetermineDst*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .TruckDst leavingtrucks = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::TruckDst::_InternalParse;
          object = msg->add_leavingtrucks();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DetermineDst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DetermineDst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TruckDst leavingtrucks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_leavingtrucks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DetermineDst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DetermineDst)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DetermineDst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DetermineDst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TruckDst leavingtrucks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->leavingtrucks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->leavingtrucks(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DetermineDst)
}

::google::protobuf::uint8* DetermineDst::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DetermineDst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TruckDst leavingtrucks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->leavingtrucks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->leavingtrucks(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DetermineDst)
  return target;
}

size_t DetermineDst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DetermineDst)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 seqnum = 2;
  if (has_seqnum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TruckDst leavingtrucks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->leavingtrucks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->leavingtrucks(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetermineDst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DetermineDst)
  GOOGLE_DCHECK_NE(&from, this);
  const DetermineDst* source =
      ::google::protobuf::DynamicCastToGenerated<DetermineDst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DetermineDst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DetermineDst)
    MergeFrom(*source);
  }
}

void DetermineDst::MergeFrom(const DetermineDst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DetermineDst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  leavingtrucks_.MergeFrom(from.leavingtrucks_);
  if (from.has_seqnum()) {
    set_seqnum(from.seqnum());
  }
}

void DetermineDst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DetermineDst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetermineDst::CopyFrom(const DetermineDst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DetermineDst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetermineDst::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->leavingtrucks())) return false;
  return true;
}

void DetermineDst::Swap(DetermineDst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetermineDst::InternalSwap(DetermineDst* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&leavingtrucks_)->InternalSwap(CastToBase(&other->leavingtrucks_));
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata DetermineDst::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TruckDst::InitAsDefaultInstance() {
}
class TruckDst::HasBitSetters {
 public:
  static void set_has_truckid(TruckDst* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_x(TruckDst* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_y(TruckDst* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_shipid(TruckDst* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TruckDst::kTruckidFieldNumber;
const int TruckDst::kXFieldNumber;
const int TruckDst::kYFieldNumber;
const int TruckDst::kShipidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TruckDst::TruckDst()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TruckDst)
}
TruckDst::TruckDst(const TruckDst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&truckid_, &from.truckid_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&truckid_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:TruckDst)
}

void TruckDst::SharedCtor() {
  ::memset(&truckid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&truckid_)) + sizeof(y_));
}

TruckDst::~TruckDst() {
  // @@protoc_insertion_point(destructor:TruckDst)
  SharedDtor();
}

void TruckDst::SharedDtor() {
}

void TruckDst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TruckDst& TruckDst::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TruckDst_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void TruckDst::Clear() {
// @@protoc_insertion_point(message_clear_start:TruckDst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&truckid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&truckid_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TruckDst::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TruckDst*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_truckid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 x = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 y = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 shipid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_shipid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TruckDst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TruckDst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_truckid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_y(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 shipid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_shipid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TruckDst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TruckDst)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TruckDst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TruckDst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // required int64 shipid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->shipid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TruckDst)
}

::google::protobuf::uint8* TruckDst::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TruckDst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // required int64 shipid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->shipid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TruckDst)
  return target;
}

size_t TruckDst::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:TruckDst)
  size_t total_size = 0;

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_shipid()) {
    // required int64 shipid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t TruckDst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TruckDst)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int64 shipid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TruckDst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TruckDst)
  GOOGLE_DCHECK_NE(&from, this);
  const TruckDst* source =
      ::google::protobuf::DynamicCastToGenerated<TruckDst>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TruckDst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TruckDst)
    MergeFrom(*source);
  }
}

void TruckDst::MergeFrom(const TruckDst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TruckDst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      truckid_ = from.truckid_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      shipid_ = from.shipid_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TruckDst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TruckDst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TruckDst::CopyFrom(const TruckDst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TruckDst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TruckDst::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void TruckDst::Swap(TruckDst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TruckDst::InternalSwap(TruckDst* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(truckid_, other->truckid_);
  swap(x_, other->x_);
  swap(shipid_, other->shipid_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata TruckDst::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SettleShipment::InitAsDefaultInstance() {
}
class SettleShipment::HasBitSetters {
 public:
  static void set_has_seqnum(SettleShipment* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SettleShipment::kPackagesFieldNumber;
const int SettleShipment::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SettleShipment::SettleShipment()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SettleShipment)
}
SettleShipment::SettleShipment(const SettleShipment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      packages_(from.packages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seqnum_ = from.seqnum_;
  // @@protoc_insertion_point(copy_constructor:SettleShipment)
}

void SettleShipment::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SettleShipment_ups_5famazon_2eproto.base);
  seqnum_ = PROTOBUF_LONGLONG(0);
}

SettleShipment::~SettleShipment() {
  // @@protoc_insertion_point(destructor:SettleShipment)
  SharedDtor();
}

void SettleShipment::SharedDtor() {
}

void SettleShipment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SettleShipment& SettleShipment::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SettleShipment_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void SettleShipment::Clear() {
// @@protoc_insertion_point(message_clear_start:SettleShipment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packages_.Clear();
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SettleShipment::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SettleShipment*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .PackageInfo packages = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::PackageInfo::_InternalParse;
          object = msg->add_packages();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SettleShipment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SettleShipment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PackageInfo packages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_packages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SettleShipment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SettleShipment)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SettleShipment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SettleShipment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PackageInfo packages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->packages(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SettleShipment)
}

::google::protobuf::uint8* SettleShipment::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SettleShipment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PackageInfo packages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->packages(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SettleShipment)
  return target;
}

size_t SettleShipment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SettleShipment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 seqnum = 2;
  if (has_seqnum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PackageInfo packages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->packages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->packages(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SettleShipment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SettleShipment)
  GOOGLE_DCHECK_NE(&from, this);
  const SettleShipment* source =
      ::google::protobuf::DynamicCastToGenerated<SettleShipment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SettleShipment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SettleShipment)
    MergeFrom(*source);
  }
}

void SettleShipment::MergeFrom(const SettleShipment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SettleShipment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packages_.MergeFrom(from.packages_);
  if (from.has_seqnum()) {
    set_seqnum(from.seqnum());
  }
}

void SettleShipment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SettleShipment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettleShipment::CopyFrom(const SettleShipment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SettleShipment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettleShipment::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->packages())) return false;
  return true;
}

void SettleShipment::Swap(SettleShipment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SettleShipment::InternalSwap(SettleShipment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&packages_)->InternalSwap(CastToBase(&other->packages_));
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata SettleShipment::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PackageInfo::InitAsDefaultInstance() {
}
class PackageInfo::HasBitSetters {
 public:
  static void set_has_packageid(PackageInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_shipid(PackageInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackageInfo::kPackageidFieldNumber;
const int PackageInfo::kShipidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackageInfo::PackageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PackageInfo)
}
PackageInfo::PackageInfo(const PackageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&shipid_) -
    reinterpret_cast<char*>(&packageid_)) + sizeof(shipid_));
  // @@protoc_insertion_point(copy_constructor:PackageInfo)
}

void PackageInfo::SharedCtor() {
  ::memset(&packageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shipid_) -
      reinterpret_cast<char*>(&packageid_)) + sizeof(shipid_));
}

PackageInfo::~PackageInfo() {
  // @@protoc_insertion_point(destructor:PackageInfo)
  SharedDtor();
}

void PackageInfo::SharedDtor() {
}

void PackageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageInfo& PackageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PackageInfo_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void PackageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&packageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&shipid_) -
        reinterpret_cast<char*>(&packageid_)) + sizeof(shipid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PackageInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_packageid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 shipid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_shipid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PackageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_packageid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 shipid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_shipid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PackageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PackageInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required int64 shipid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->shipid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PackageInfo)
}

::google::protobuf::uint8* PackageInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required int64 shipid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->shipid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PackageInfo)
  return target;
}

size_t PackageInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PackageInfo)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_shipid()) {
    // required int64 shipid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  return total_size;
}
size_t PackageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PackageInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 shipid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageInfo* source =
      ::google::protobuf::DynamicCastToGenerated<PackageInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PackageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PackageInfo)
    MergeFrom(*source);
  }
}

void PackageInfo::MergeFrom(const PackageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      shipid_ = from.shipid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PackageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageInfo::CopyFrom(const PackageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PackageInfo::Swap(PackageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackageInfo::InternalSwap(PackageInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(packageid_, other->packageid_);
  swap(shipid_, other->shipid_);
}

::google::protobuf::Metadata PackageInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UCommands::InitAsDefaultInstance() {
}
class UCommands::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UCommands::kWorldsFieldNumber;
const int UCommands::kTrucksFieldNumber;
const int UCommands::kShipmentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UCommands::UCommands()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UCommands)
}
UCommands::UCommands(const UCommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      worlds_(from.worlds_),
      trucks_(from.trucks_),
      shipments_(from.shipments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UCommands)
}

void UCommands::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UCommands_ups_5famazon_2eproto.base);
}

UCommands::~UCommands() {
  // @@protoc_insertion_point(destructor:UCommands)
  SharedDtor();
}

void UCommands::SharedDtor() {
}

void UCommands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UCommands& UCommands::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UCommands_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void UCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:UCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worlds_.Clear();
  trucks_.Clear();
  shipments_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UCommands::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UCommands*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .InitWorld worlds = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::InitWorld::_InternalParse;
          object = msg->add_worlds();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .DetermineTruck trucks = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::DetermineTruck::_InternalParse;
          object = msg->add_trucks();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .SettleShipment shipments = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::SettleShipment::_InternalParse;
          object = msg->add_shipments();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UCommands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .InitWorld worlds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_worlds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DetermineTruck trucks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trucks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SettleShipment shipments = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shipments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UCommands)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .InitWorld worlds = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worlds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->worlds(static_cast<int>(i)),
      output);
  }

  // repeated .DetermineTruck trucks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trucks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->trucks(static_cast<int>(i)),
      output);
  }

  // repeated .SettleShipment shipments = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shipments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->shipments(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UCommands)
}

::google::protobuf::uint8* UCommands::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .InitWorld worlds = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worlds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->worlds(static_cast<int>(i)), target);
  }

  // repeated .DetermineTruck trucks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trucks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->trucks(static_cast<int>(i)), target);
  }

  // repeated .SettleShipment shipments = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shipments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->shipments(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UCommands)
  return target;
}

size_t UCommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UCommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .InitWorld worlds = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->worlds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->worlds(static_cast<int>(i)));
    }
  }

  // repeated .DetermineTruck trucks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->trucks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trucks(static_cast<int>(i)));
    }
  }

  // repeated .SettleShipment shipments = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->shipments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shipments(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UCommands)
  GOOGLE_DCHECK_NE(&from, this);
  const UCommands* source =
      ::google::protobuf::DynamicCastToGenerated<UCommands>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UCommands)
    MergeFrom(*source);
  }
}

void UCommands::MergeFrom(const UCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UCommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  worlds_.MergeFrom(from.worlds_);
  trucks_.MergeFrom(from.trucks_);
  shipments_.MergeFrom(from.shipments_);
}

void UCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UCommands::CopyFrom(const UCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UCommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->worlds())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->trucks())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->shipments())) return false;
  return true;
}

void UCommands::Swap(UCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UCommands::InternalSwap(UCommands* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&worlds_)->InternalSwap(CastToBase(&other->worlds_));
  CastToBase(&trucks_)->InternalSwap(CastToBase(&other->trucks_));
  CastToBase(&shipments_)->InternalSwap(CastToBase(&other->shipments_));
}

::google::protobuf::Metadata UCommands::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ACommands::InitAsDefaultInstance() {
}
class ACommands::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ACommands::kWarehousesFieldNumber;
const int ACommands::kDestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ACommands::ACommands()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ACommands)
}
ACommands::ACommands(const ACommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      warehouses_(from.warehouses_),
      dests_(from.dests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ACommands)
}

void ACommands::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ACommands_ups_5famazon_2eproto.base);
}

ACommands::~ACommands() {
  // @@protoc_insertion_point(destructor:ACommands)
  SharedDtor();
}

void ACommands::SharedDtor() {
}

void ACommands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ACommands& ACommands::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ACommands_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void ACommands::Clear() {
// @@protoc_insertion_point(message_clear_start:ACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  warehouses_.Clear();
  dests_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ACommands::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ACommands*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .DetermineWarehouse warehouses = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::DetermineWarehouse::_InternalParse;
          object = msg->add_warehouses();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .DetermineDst dests = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::DetermineDst::_InternalParse;
          object = msg->add_dests();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ACommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ACommands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DetermineWarehouse warehouses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_warehouses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DetermineDst dests = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ACommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ACommands)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ACommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DetermineWarehouse warehouses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->warehouses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->warehouses(static_cast<int>(i)),
      output);
  }

  // repeated .DetermineDst dests = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->dests(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ACommands)
}

::google::protobuf::uint8* ACommands::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DetermineWarehouse warehouses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->warehouses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->warehouses(static_cast<int>(i)), target);
  }

  // repeated .DetermineDst dests = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->dests(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ACommands)
  return target;
}

size_t ACommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ACommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DetermineWarehouse warehouses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->warehouses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->warehouses(static_cast<int>(i)));
    }
  }

  // repeated .DetermineDst dests = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->dests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dests(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ACommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ACommands)
  GOOGLE_DCHECK_NE(&from, this);
  const ACommands* source =
      ::google::protobuf::DynamicCastToGenerated<ACommands>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ACommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ACommands)
    MergeFrom(*source);
  }
}

void ACommands::MergeFrom(const ACommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ACommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  warehouses_.MergeFrom(from.warehouses_);
  dests_.MergeFrom(from.dests_);
}

void ACommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ACommands::CopyFrom(const ACommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ACommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->warehouses())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->dests())) return false;
  return true;
}

void ACommands::Swap(ACommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ACommands::InternalSwap(ACommands* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&warehouses_)->InternalSwap(CastToBase(&other->warehouses_));
  CastToBase(&dests_)->InternalSwap(CastToBase(&other->dests_));
}

::google::protobuf::Metadata ACommands::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
}
class Response::HasBitSetters {
 public:
  static void set_has_succeed(Response* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_seqnum(Response* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kSucceedFieldNumber;
const int Response::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&succeed_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(succeed_));
  // @@protoc_insertion_point(copy_constructor:Response)
}

void Response::SharedCtor() {
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&succeed_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(succeed_));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Response)
  SharedDtor();
}

void Response::SharedDtor() {
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Response_ups_5famazon_2eproto.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&succeed_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(succeed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bool succeed = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_succeed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool succeed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_succeed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &succeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool succeed = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->succeed(), output);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool succeed = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->succeed(), target);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response)
  return target;
}

size_t Response::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Response)
  size_t total_size = 0;

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_succeed()) {
    // required bool succeed = 1;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required bool succeed = 1;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::DynamicCastToGenerated<Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      succeed_ = from.succeed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(seqnum_, other->seqnum_);
  swap(succeed_, other->succeed_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ups_5famazon_2eproto);
  return ::file_level_metadata_ups_5famazon_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}// namespace UPS_AMAZON
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::InitWorld* Arena::CreateMaybeMessage< ::InitWorld >(Arena* arena) {
  return Arena::CreateInternal< ::InitWorld >(arena);
}
template<> PROTOBUF_NOINLINE ::WarehouseInfo* Arena::CreateMaybeMessage< ::WarehouseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::WarehouseInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::DetermineWarehouse* Arena::CreateMaybeMessage< ::DetermineWarehouse >(Arena* arena) {
  return Arena::CreateInternal< ::DetermineWarehouse >(arena);
}
template<> PROTOBUF_NOINLINE ::DetermineTruck* Arena::CreateMaybeMessage< ::DetermineTruck >(Arena* arena) {
  return Arena::CreateInternal< ::DetermineTruck >(arena);
}
template<> PROTOBUF_NOINLINE ::TruckLocation* Arena::CreateMaybeMessage< ::TruckLocation >(Arena* arena) {
  return Arena::CreateInternal< ::TruckLocation >(arena);
}
template<> PROTOBUF_NOINLINE ::DetermineDst* Arena::CreateMaybeMessage< ::DetermineDst >(Arena* arena) {
  return Arena::CreateInternal< ::DetermineDst >(arena);
}
template<> PROTOBUF_NOINLINE ::TruckDst* Arena::CreateMaybeMessage< ::TruckDst >(Arena* arena) {
  return Arena::CreateInternal< ::TruckDst >(arena);
}
template<> PROTOBUF_NOINLINE ::SettleShipment* Arena::CreateMaybeMessage< ::SettleShipment >(Arena* arena) {
  return Arena::CreateInternal< ::SettleShipment >(arena);
}
template<> PROTOBUF_NOINLINE ::PackageInfo* Arena::CreateMaybeMessage< ::PackageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::PackageInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::UCommands* Arena::CreateMaybeMessage< ::UCommands >(Arena* arena) {
  return Arena::CreateInternal< ::UCommands >(arena);
}
template<> PROTOBUF_NOINLINE ::ACommands* Arena::CreateMaybeMessage< ::ACommands >(Arena* arena) {
  return Arena::CreateInternal< ::ACommands >(arena);
}
template<> PROTOBUF_NOINLINE ::Response* Arena::CreateMaybeMessage< ::Response >(Arena* arena) {
  return Arena::CreateInternal< ::Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
